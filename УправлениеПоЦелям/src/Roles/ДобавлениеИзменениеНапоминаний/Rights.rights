<?xml version="1.0" encoding="UTF-8"?>
<Rights xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://v8.1c.ru/8.2/roles" xsi:type="Rights">
	<object>
		<name>CommonCommand.Напомнить</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НапоминанияПользователя</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#Если &amp;ОграничениеДоступаНаУровнеЗаписейУниверсально #Тогда
#ДляРегистра(&quot;ИдентификаторыОбъектовМетаданных.РегистрСведенийНапоминанияПользователя&quot;, &quot;Пользователь&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;)
#Иначе
ГДЕ Пользователь = &amp;ТекущийПользователь
#КонецЕсли</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#Если &amp;ОграничениеДоступаНаУровнеЗаписейУниверсально #Тогда
#ДляРегистра(&quot;ИдентификаторыОбъектовМетаданных.РегистрСведенийНапоминанияПользователя&quot;, &quot;Пользователь&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;)
#Иначе
ГДЕ Пользователь = &amp;ТекущийПользователь
#КонецЕсли</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>TotalsControl</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НапоминанияПользователя.Command.МоиНапоминания</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<restrictionTemplate>
		<name>ДляРегистра(Регистр, Поле1, Поле2, Поле3, Поле4, Поле5)</name>
		<condition>// ДляРегистра(Регистр, Поле1, Поле2 = &quot;&quot;, Поле3 = &quot;&quot;, Поле4 = &quot;&quot;, Поле5 = &quot;&quot;)
// Шаблон используется для ограничения групп записей регистров.
//
// Параметры:
//  Регистр - имя предопределенного элемента справочника Идентификаторы объектов метаданных или справочника
//            Идентификаторы объектов расширений в формате: имя справочника с точкой и полное имя таблицы
//            без точки, например, ИдентификаторыОбъектовМетаданных.РегистрНакопленияОстаткиНаСкладах;
//          - имя отдельного регистра ключей в формате КлючиДоступаКРегистру&lt;ОстатокИмени>,
//            например, КлючиДоступаКРегиструОстаткиНаСкладах.
//  Поле1   - имя первого поля (измерения, ресурса, реквизита), которое будет соединяться с полем Поле1
//            регистра сведений КлючиДоступаКРегистр*
//  Поле2   - аналогично предыдущему параметру, если используется в ограничении доступа к регистру.
//  ...
//  Поле5   - аналогично предыдущему параметру, если используется в ограничении доступа к регистру.

#Если &amp;СпискиСОтключеннымОграничениемЧтения = &quot;Неопределено&quot; #Тогда
  // Информационная база заблокирована для обновления.
  ГДЕ ЛОЖЬ

#ИначеЕсли Не СтрСодержит(&amp;ВерсииШаблоновОграниченияДоступа, &quot;,ДляРегистра3,&quot;) #Тогда
         И Не СтрСодержит(&amp;ВерсииШаблоновОграниченияДоступа, &quot;,ДляРегистра3ТребуетсяПерезапуститьСеанс,&quot;) #Тогда
    Ошибка: Требуется обновить шаблон на актуальную версию, поставляемую в роли ИзменениеУчастниковГруппДоступа по причине: Используется устаревшая версия 1 шаблона ограничения доступа ДляРегистра. Объект: #ИмяТекущейТаблицы, Право: #ИмяТекущегоПраваДоступа.

#ИначеЕсли &amp;СпискиСОтключеннымОграничениемЧтения = &quot;Все&quot; #Тогда
  // У пользователя отключены все виды доступа или
  // ограничение на уровне записей не используется.
  ГДЕ ИСТИНА

#ИначеЕсли СтрСодержит(&amp;СпискиСОтключеннымОграничениемЧтения, #ИмяТекущейТаблицы) #Тогда
  // У пользователя отключено ограничение для текущей таблицы.
  ГДЕ ИСТИНА

#ИначеЕсли СтрСодержит(&amp;ВерсииШаблоновОграниченияДоступа, &quot;,ДляРегистра3ТребуетсяПерезапуститьСеанс,&quot;) #Тогда
    Ошибка: Версия программы обновлена, требуется перезапустить сеанс. Объект: #ИмяТекущейТаблицы, Право: #ИмяТекущегоПраваДоступа.

#ИначеЕсли #ИмяТекущегоПраваДоступа &lt;> &quot;Чтение&quot; #Тогда
  // Проверка прав Добавление, Изменение, Удаление выполняется ПередЗаписью / ПриЗаписи.
  ГДЕ ИСТИНА

#ИначеЕсли Не СтрСодержит(&amp;СпискиСОграничениемЧерезКлючиДоступаПользователей, #ИмяТекущейТаблицы + &quot;:[#Регистр]:#Поле1:#Поле2:#Поле3:#Поле4:#Поле5;&quot;)
         И Не СтрСодержит(&amp;СпискиСОграничениемЧерезКлючиДоступаГруппДоступа,  #ИмяТекущейТаблицы + &quot;:[#Регистр]:#Поле1:#Поле2:#Поле3:#Поле4:#Поле5;&quot;) #Тогда

  Ошибка: Требуется актуализировать ограничение доступа по причине: Не удалось определить вариант ограничения доступа в параметрах сеанса для шаблона ДляРегистра со значениями параметров &quot;#Регистр&quot;, &quot;#Поле1&quot;, &quot;#Поле2&quot;, &quot;#Поле3&quot;, &quot;#Поле4&quot;, &quot;#Поле5&quot;. Объект: #ИмяТекущейТаблицы, Право: #ИмяТекущегоПраваДоступа.
#Иначе

ТекущаяТаблица ГДЕ ИСТИНА В
 (
  ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
#Если Не СтрСодержит(&quot;#Регистр&quot;, &quot;КлючиДоступаКРегистру&quot;) #Тогда
  ИЗ РегистрСведений.КлючиДоступаКРегистрам КАК КлючиДоступаКРегистрам
#Иначе
  ИЗ РегистрСведений.#Регистр КАК КлючиДоступаКРегистрам
#КонецЕсли
#Если Не СтрСодержит(&amp;СпискиСОграничениемЧерезКлючиДоступаПользователей, #ИмяТекущейТаблицы + &quot;:[#Регистр]:#Поле1:#Поле2:#Поле3:#Поле4:#Поле5;&quot;) #Тогда
  ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КлючиДоступаНаборовГруппДоступа КАК РазрешенныеКлючиДоступа
  
#ИначеЕсли &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
  ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КлючиДоступаПользователей КАК РазрешенныеКлючиДоступа
#Иначе
  ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КлючиДоступаВнешнихПользователей КАК РазрешенныеКлючиДоступа
#КонецЕсли
  ПО
  #Если Не СтрСодержит(&quot;#Регистр&quot;, &quot;КлючиДоступаКРегистру&quot;) #Тогда
      КлючиДоступаКРегистрам.Регистр = Значение(Справочник.#Регистр)
  #Иначе
      ИСТИНА
  #КонецЕсли
  
  #Если &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
    И КлючиДоступаКРегистрам.ДляВнешнихПользователей = ЛОЖЬ
  #Иначе
    И КлючиДоступаКРегистрам.ДляВнешнихПользователей = ИСТИНА
  #КонецЕсли
  
  #Если СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле1=Поле1;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле1 = ТекущаяТаблица.#Поле1
  #ИначеЕсли СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле1=Поле2;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле1 = ТекущаяТаблица.#Поле2
  #ИначеЕсли СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле1=Поле3;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле1 = ТекущаяТаблица.#Поле3
  #ИначеЕсли СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле1=Поле4;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле1 = ТекущаяТаблица.#Поле4
  #ИначеЕсли СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле1=Поле5;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле1 = ТекущаяТаблица.#Поле5
  #КонецЕсли
  
  #Если СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле2=Поле2;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле2 = ТекущаяТаблица.#Поле2
  #ИначеЕсли СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле2=Поле3;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле2 = ТекущаяТаблица.#Поле3
  #ИначеЕсли СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле2=Поле4;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле2 = ТекущаяТаблица.#Поле4
  #ИначеЕсли СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле2=Поле5;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле2 = ТекущаяТаблица.#Поле5
  #ИначеЕсли СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле2=Null;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле2 = Значение(Перечисление.ДополнительныеЗначенияДоступа.Null)
  #КонецЕсли
  
  #Если СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле3=Поле3;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле3 = ТекущаяТаблица.#Поле3
  #ИначеЕсли СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле3=Поле4;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле3 = ТекущаяТаблица.#Поле4
  #ИначеЕсли СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле3=Поле5;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле3 = ТекущаяТаблица.#Поле5
  #ИначеЕсли СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле3=Null;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле3 = Значение(Перечисление.ДополнительныеЗначенияДоступа.Null)
  #КонецЕсли
  
  #Если СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле4=Поле4;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле4 = ТекущаяТаблица.#Поле4
  #ИначеЕсли СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле4=Поле5;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле4 = ТекущаяТаблица.#Поле5
  #ИначеЕсли СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле4=Null;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле4 = Значение(Перечисление.ДополнительныеЗначенияДоступа.Null)
  #КонецЕсли
  
  #Если СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле5=Поле5;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле5 = ТекущаяТаблица.#Поле5
  #ИначеЕсли СтрСодержит(&amp;СпискиСОграничениемПоПолям, #ИмяТекущейТаблицы + &quot;:Поле5=Null;&quot;) #Тогда
    И КлючиДоступаКРегистрам.Поле5 = Значение(Перечисление.ДополнительныеЗначенияДоступа.Null)
  #КонецЕсли
  
  #Если Не СтрСодержит(&amp;СпискиСОграничениемЧерезКлючиДоступаПользователей, #ИмяТекущейТаблицы + &quot;:[#Регистр]:#Поле1:#Поле2:#Поле3:#Поле4:#Поле5;&quot;) #Тогда
    И РазрешенныеКлючиДоступа.КлючДоступа = КлючиДоступаКРегистрам.КлючДоступа
    И РазрешенныеКлючиДоступа.НаборГруппДоступа В (&amp;РазрешенныйНаборГруппДоступа
      #Если СтрСодержит(&amp;СпискиСОграничениемЧерезКлючиДоступаГруппДоступа,  #ИмяТекущейТаблицы + &quot;:[#Регистр]:#Поле1:#Поле2:#Поле3:#Поле4:#Поле5;*+&quot;)
        Или СтрСодержит(&amp;СпискиСОграничениемЧерезКлючиДоступаГруппДоступа,  #ИмяТекущейТаблицы + &quot;:[#Регистр]:#Поле1:#Поле2:#Поле3:#Поле4:#Поле5;*&quot;) #Тогда
        , &amp;РазрешенныйПустойНаборГруппДоступа
      #КонецЕсли
      )
  #ИначеЕсли &amp;ТекущийВнешнийПользователь = Значение(Справочник.ВнешниеПользователи.ПустаяСсылка) #Тогда
    И РазрешенныеКлючиДоступа.КлючДоступа = КлючиДоступаКРегистрам.КлючДоступа
    И РазрешенныеКлючиДоступа.Пользователь В (&amp;РазрешенныйПользователь, &amp;РазрешенныйНаборГруппДоступа
  #Иначе
    И РазрешенныеКлючиДоступа.КлючДоступа = КлючиДоступаКРегистрам.КлючДоступа
    И РазрешенныеКлючиДоступа.ВнешнийПользователь В (&amp;РазрешенныйПользователь, &amp;РазрешенныйНаборГруппДоступа
  #КонецЕсли
  #Если СтрСодержит(&amp;СпискиСОграничениемЧерезКлючиДоступаПользователей, #ИмяТекущейТаблицы + &quot;:[#Регистр]:#Поле1:#Поле2:#Поле3:#Поле4:#Поле5;&quot;) #Тогда
      #Если СтрСодержит(&amp;СпискиСОграничениемЧерезКлючиДоступаПользователей, #ИмяТекущейТаблицы + &quot;:[#Регистр]:#Поле1:#Поле2:#Поле3:#Поле4:#Поле5;*+&quot;)
        Или СтрСодержит(&amp;СпискиСОграничениемЧерезКлючиДоступаПользователей, #ИмяТекущейТаблицы + &quot;:[#Регистр]:#Поле1:#Поле2:#Поле3:#Поле4:#Поле5;+&quot;) #Тогда
        , &amp;РазрешенныйНаборГруппПользователей
      #КонецЕсли
      #Если СтрСодержит(&amp;СпискиСОграничениемЧерезКлючиДоступаПользователей, #ИмяТекущейТаблицы + &quot;:[#Регистр]:#Поле1:#Поле2:#Поле3:#Поле4:#Поле5;*+&quot;)
        Или СтрСодержит(&amp;СпискиСОграничениемЧерезКлючиДоступаПользователей, #ИмяТекущейТаблицы + &quot;:[#Регистр]:#Поле1:#Поле2:#Поле3:#Поле4:#Поле5;*&quot;) #Тогда
        , &amp;РазрешенныйПустойНаборГруппДоступа
      #КонецЕсли
      )
  #КонецЕсли
 )

#КонецЕсли
</condition>
	</restrictionTemplate>
	<setForNewObjects>false</setForNewObjects>
	<setForAttributesByDefault>true</setForAttributesByDefault>
	<independentRightsOfChildObjects>false</independentRightsOfChildObjects>
</Rights>
